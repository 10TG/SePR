commit 4368c4bc9d36821690d6bb2e743d5a075b6ddb55
Merge: 0eb0ce0a78e1 4c92057661a3
Author: Linus Torvalds <torvalds@linux-foundation.org>
Commit: Linus Torvalds <torvalds@linux-foundation.org>

    Merge branch 'x86/grand-schemozzle' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull pti updates from Thomas Gleixner:
     "The performance deterioration departement is not proud at all to
      present yet another set of speculation fences to mitigate the next
      chapter in the 'what could possibly go wrong' story.
    
      The new vulnerability belongs to the Spectre class and affects GS
      based data accesses and has therefore been dubbed 'Grand Schemozzle'
      for secret communication purposes. It's officially listed as
      CVE-2019-1125.
    
      Conditional branches in the entry paths which contain a SWAPGS
      instruction (interrupts and exceptions) can be mis-speculated which
      results in speculative accesses with a wrong GS base.
    
      This can happen on entry from user mode through a mis-speculated
      branch which takes the entry from kernel mode path and therefore does
      not execute the SWAPGS instruction. The following speculative accesses
      are done with user GS base.
    
      On entry from kernel mode the mis-speculated branch executes the
      SWAPGS instruction in the entry from user mode path which has the same
      effect that the following GS based accesses are done with user GS
      base.
    
      If there is a disclosure gadget available in these code paths the
      mis-speculated data access can be leaked through the usual side
      channels.
    
      The entry from user mode issue affects all CPUs which have speculative
      execution. The entry from kernel mode issue affects only Intel CPUs
      which can speculate through SWAPGS. On CPUs from other vendors SWAPGS
      has semantics which prevent that.
    
      SMAP migitates both problems but only when the CPU is not affected by
      the Meltdown vulnerability.
    
      The mitigation is to issue LFENCE instructions in the entry from
      kernel mode path for all affected CPUs and on the affected Intel CPUs
      also in the entry from user mode path unless PTI is enabled because
      the CR3 write is serializing.
    
      The fences are as usual enabled conditionally and can be completely
      disabled on the kernel command line. The Spectre V1 documentation is
      updated accordingly.
    
      A big "Thank You!" goes to Josh for doing the heavy lifting for this
      round of hardware misfeature 'repair'. Of course also "Thank You!" to
      everybody else who contributed in one way or the other"
    
    * 'x86/grand-schemozzle' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      Documentation: Add swapgs description to the Spectre v1 documentation
      x86/speculation/swapgs: Exclude ATOMs from speculation through SWAPGS
      x86/entry/64: Use JMP instead of JMPQ
      x86/speculation: Enable Spectre v1 swapgs mitigations
      x86/speculation: Prepare entry code for Spectre v1 swapgs mitigations
