commit dda3f4252e6c8b833a2ef164afd3da9808d0f07c
Merge: 3494d58865ad da631f7fd623
Author: Linus Torvalds <torvalds@linux-foundation.org>
Commit: Linus Torvalds <torvalds@linux-foundation.org>

    Merge tag 'powerpc-cve-2020-4788' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux
    
    Pull powerpc fixes from Michael Ellerman:
     "Fixes for CVE-2020-4788.
    
      From Daniel's cover letter:
    
      IBM Power9 processors can speculatively operate on data in the L1
      cache before it has been completely validated, via a way-prediction
      mechanism. It is not possible for an attacker to determine the
      contents of impermissible memory using this method, since these
      systems implement a combination of hardware and software security
      measures to prevent scenarios where protected data could be leaked.
    
      However these measures don't address the scenario where an attacker
      induces the operating system to speculatively execute instructions
      using data that the attacker controls. This can be used for example to
      speculatively bypass "kernel user access prevention" techniques, as
      discovered by Anthony Steinhauser of Google's Safeside Project. This
      is not an attack by itself, but there is a possibility it could be
      used in conjunction with side-channels or other weaknesses in the
      privileged code to construct an attack.
    
      This issue can be mitigated by flushing the L1 cache between privilege
      boundaries of concern.
    
      This patch series flushes the L1 cache on kernel entry (patch 2) and
      after the kernel performs any user accesses (patch 3). It also adds a
      self-test and performs some related cleanups"
    
    * tag 'powerpc-cve-2020-4788' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:
      powerpc/64s: rename pnv|pseries_setup_rfi_flush to _setup_security_mitigations
      selftests/powerpc: refactor entry and rfi_flush tests
      selftests/powerpc: entry flush test
      powerpc: Only include kup-radix.h for 64-bit Book3S
      powerpc/64s: flush L1D after user accesses
      powerpc/64s: flush L1D on kernel entry
      selftests/powerpc: rfi_flush: disable entry flush if present
